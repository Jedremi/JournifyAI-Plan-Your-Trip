This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-09-30T06:13:37.679Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
app/
  components/
    HeroSection.tsx
    TravelPlannerForm.tsx
    TripPlan.tsx
  plan/
    page.tsx
  Footer.tsx
  globals.css
  Header.tsx
  layout.tsx
  nature-overlay.jpg:Zone.Identifier
  page.tsx
  travel-background.jpg:Zone.Identifier
  traveler.png:Zone.Identifier

================================================================
Repository Files
================================================================

================
File: app/components/HeroSection.tsx
================
const HeroSection = () => {
    return (
      <section className="text-center py-20 bg-white bg-opacity-80 rounded-lg shadow-lg">
        <h1 className="text-4xl font-bold mb-4 bg-gradient-to-r from-teal-500 to-green-500 text-transparent bg-clip-text">Plan Your Dream Trip with Plan My Trip</h1>
        <p className="text-xl text-gray-700 mb-8">
          Let our advanced AI create the perfect itinerary for your next adventure
        </p>
        <a
          href="#planner"
          className="bg-gradient-to-r from-teal-500 to-green-500 text-white px-6 py-3 rounded-lg hover:from-teal-600 hover:to-green-600 transition duration-300"
        >
          Start Planning
        </a>
      </section>
    );
  };
  
  export default HeroSection;

================
File: app/components/TravelPlannerForm.tsx
================
'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';

const TravelPlannerForm = () => {
  const [destination, setDestination] = useState('');
  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');
  const [budget, setBudget] = useState('');
  const router = useRouter();

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    router.push(`/plan?destination=${destination}&startDate=${startDate}&endDate=${endDate}&budget=${budget}`);
  };

  return (
    <form onSubmit={handleSubmit} className="max-w-lg mx-auto my-10 bg-white bg-opacity-90 p-8 rounded-lg shadow-lg transform hover:scale-105 transition-transform duration-300" id="planner">
      <div className="mb-4">
        <label htmlFor="destination" className="block text-teal-700 font-bold mb-2">
          Destination
        </label>
        <input
          type="text"
          id="destination"
          value={destination}
          onChange={(e) => setDestination(e.target.value)}
          className="w-full px-3 py-2 border border-teal-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-500 transition-all duration-300 ease-in-out hover:shadow-md"
          required
        />
      </div>
      <div className="mb-4">
        <label htmlFor="startDate" className="block text-teal-700 font-bold mb-2">
          Start Date
        </label>
        <input
          type="date"
          id="startDate"
          value={startDate}
          onChange={(e) => setStartDate(e.target.value)}
          className="w-full px-3 py-2 border border-teal-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-500 transition-all duration-300 ease-in-out hover:shadow-md"
          required
        />
      </div>
      <div className="mb-4">
        <label htmlFor="endDate" className="block text-teal-700 font-bold mb-2">
          End Date
        </label>
        <input
          type="date"
          id="endDate"
          value={endDate}
          onChange={(e) => setEndDate(e.target.value)}
          className="w-full px-3 py-2 border border-teal-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-500 transition-all duration-300 ease-in-out hover:shadow-md"
          required
        />
      </div>
      <div className="mb-4">
        <label htmlFor="budget" className="block text-teal-700 font-bold mb-2">
          Budget Range
        </label>
        <select
          id="budget"
          value={budget}
          onChange={(e) => setBudget(e.target.value)}
          className="w-full px-3 py-2 border border-teal-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-teal-500 transition-all duration-300 ease-in-out hover:shadow-md"
          required
        >
          <option value="">Select a budget range</option>
          <option value="budget">Budget ($)</option>
          <option value="moderate">Moderate ($$)</option>
          <option value="luxury">Luxury ($$$)</option>
        </select>
      </div>
      <button
        type="submit"
        className="w-full bg-gradient-to-r from-teal-500 to-green-500 text-white py-2 px-4 rounded-lg hover:from-teal-600 hover:to-green-600 transition-all duration-300 ease-in-out transform hover:scale-105 hover:shadow-lg"
      >
        Generate Trip Plan
      </button>
    </form>
  );
};

export default TravelPlannerForm;

================
File: app/components/TripPlan.tsx
================
interface TripPlanProps {
    plan: {
      destination: string;
      startDate: string;
      endDate: string;
      budget: string;
      hotels: string[];
      activities: string[];
      restaurants: string[];
    };
  }
  
  const TripPlan: React.FC<TripPlanProps> = ({ plan }) => {
    return (
      <div className="bg-white shadow-md rounded-lg p-6">
        <h2 className="text-2xl font-bold mb-4">Trip to {plan.destination}</h2>
        <p className="mb-2">
          <span className="font-semibold">Dates:</span> {plan.startDate} to {plan.endDate}
        </p>
        <p className="mb-4">
          <span className="font-semibold">Budget:</span> {plan.budget}
        </p>
  
        <h3 className="text-xl font-semibold mb-2">Recommended Hotels</h3>
        <ul className="list-disc pl-5 mb-4">
          {plan.hotels.map((hotel, index) => (
            <li key={index}>{hotel}</li>
          ))}
        </ul>
  
        <h3 className="text-xl font-semibold mb-2">Suggested Activities</h3>
        <ul className="list-disc pl-5 mb-4">
          {plan.activities.map((activity, index) => (
            <li key={index}>{activity}</li>
          ))}
        </ul>
  
        <h3 className="text-xl font-semibold mb-2">Recommended Restaurants</h3>
        <ul className="list-disc pl-5">
          {plan.restaurants.map((restaurant, index) => (
            <li key={index}>{restaurant}</li>
          ))}
        </ul>
      </div>
    );
  };
  
  export default TripPlan;

================
File: app/plan/page.tsx
================
'use client';

import { useSearchParams } from 'next/navigation';
import { useEffect, useState } from 'react';
import TripPlan from '@/app/components/TripPlan';

export default function PlanPage() {
  const searchParams = useSearchParams();
  const [plan, setPlan] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const destination = searchParams.get('destination');
    const startDate = searchParams.get('startDate');
    const endDate = searchParams.get('endDate');
    const budget = searchParams.get('budget');

    // Simulate API call to generate plan
    const generatePlan = async () => {
      setLoading(true);
      // In a real application, you would make an API call here
      await new Promise((resolve) => setTimeout(resolve, 2000)); // Simulate delay

      setLoading(false);
    };

    generatePlan();
  }, [searchParams]);

  if (loading) {
    return <div className="text-center py-20">Generating your travel plan...</div>;
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-6">Your Travel Plan</h1>
      {plan && <TripPlan plan={plan} />}
    </div>
  );
}

================
File: app/Footer.tsx
================
const Footer = () => {
  return (
    <footer className="bg-sky-100 bg-opacity-5 shadow-md text-white py-8">
      <div className="container mx-auto px-4">
        <div className="flex flex-wrap justify-between items-center">
          <div className="w-full md:w-1/3 text-center md:text-left mb-4 md:mb-0">
            <h2 className="text-lg font-bold">Plan My Trip</h2>
            <p className="mt-2 text-sky-200">Plan your perfect trip with AI assistance</p>
          </div>
          <div className="w-full md:w-1/3 text-center mb-4 md:mb-0">
            <h3 className="text-lg font-bold mb-2">Quick Links</h3>
            <ul className="flex justify-center md:justify-center space-x-4">
              <li><a href="/" className="hover:text-sky-200 transition-colors duration-300">Home</a></li>
              <li><a href="/about" className="hover:text-sky-200 transition-colors duration-300">About</a></li>
              <li><a href="/contact" className="hover:text-sky-200 transition-colors duration-300">Contact</a></li>
            </ul>
          </div>
          <div className="w-full md:w-1/3 text-center md:text-right">
            <h3 className="text-lg font-bold mb-2">Connect With Us</h3>
            <div className="flex justify-center md:justify-end space-x-4">
              <a href="#" className="hover:text-sky-200 transition-colors duration-300">Facebook</a>
              <a href="#" className="hover:text-sky-200 transition-colors duration-300">Twitter</a>
              <a href="#" className="hover:text-sky-200 transition-colors duration-300">Instagram</a>
            </div>
          </div>
        </div>
        <div className="mt-8 text-center text-sky-200">
          <p>&copy; 2024 Plan My Trip. All rights reserved.</p>
        </div>
      </div>
    </footer>
  );
};

export default Footer;

================
File: app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground: #333333;
  --background-start: #e6f7ff;
  --background-end: #e6fff0;
  --header-bg-start: rgba(100, 181, 246, 0.3);
  /* Light blue with 30% opacity */
  --header-bg-end: rgba(3, 169, 244, 0.3);
  /* Slightly darker blue with 30% opacity */
  --footer-bg-start: rgba(100, 181, 246, 0.3);
  /* Light blue with 30% opacity */
  --footer-bg-end: rgba(3, 169, 244, 0.3);
  /* Slightly darker blue with 30% opacity */
}

body {
  color: var(--foreground);
  font-family: 'Geist Sans', Arial, Helvetica, sans-serif;
  background: linear-gradient(135deg, var(--background-start) 0%, var(--background-end) 100%);
  background-image: url('/nature-overlay.jpg');
  background-attachment: fixed;
  min-height: 100vh;
}

/* Existing styles */
@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

#planner {
  animation: fadeInUp 0.5s ease-out;
}

html {
  scroll-behavior: smooth;
}

.bg-blur {
  backdrop-filter: blur(8px);
  background-color: rgba(255, 255, 255, 0.8);
}

/* New styles for image overlays */
.nature-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
  opacity: 0.1;
  mix-blend-mode: overlay;
}

.traveler-overlay {
  position: fixed;
  bottom: 0;
  right: 0;
  width: 30%;
  height: auto;
  pointer-events: none;
  z-index: -1;
  opacity: 0.8;
}

/* Header styles */
header,
footer {
  background-color: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(5px);
  color: #333;
  /* Add any other shared styles */
}

/* Footer styles */
footer {
  background-color: rgba(255, 255, 255, 0.7);
  /* Adjust the last value (0.7) for transparency */
  backdrop-filter: blur(5px);
  /* This adds a blur effect to the background */
  color: #333;
  /* Adjust the text color to match your design */
  /* Add any other existing styles you have for the footer */
}

================
File: app/Header.tsx
================
import Link from 'next/link';
import { Home, Info, Phone } from 'lucide-react';

const Header = () => {
  return (
    <header className="bg-sky-100 bg-opacity-5 shadow-md">
      <nav className="container mx-auto px-6 py-4">
        <div className="flex justify-between items-center">
          <Link href="/" className="text-2xl font-bold text-white hover:text-sky-200 transition-colors duration-300">
            Plan My Trip
          </Link>
          <div className="space-x-6">
            <Link href="/" className="text-white hover:text-sky-200 transition-colors duration-300 flex items-center">
              <Home className="w-5 h-5 mr-1" />
              <span>Home</span>
            </Link>
            <Link href="/about" className="text-white hover:text-sky-200 transition-colors duration-300 flex items-center">
              <Info className="w-5 h-5 mr-1" />
              <span>About</span>
            </Link>
            <Link href="/contact" className="text-white hover:text-sky-200 transition-colors duration-300 flex items-center">
              <Phone className="w-5 h-5 mr-1" />
              <span>Contact</span>
            </Link>
          </div>
        </div>
      </nav>
    </header>
  );
};

export default Header;

================
File: app/layout.tsx
================
import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Header from "./Header";
import Footer from "./Footer";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "AI Travel Planner",
  description: "Plan your perfect trip with AI assistance",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div className="bg-image"></div>
        <div className="main-content">
          <Header />
          <main className="min-h-screen py-8">
            {children}
          </main>
          <Footer />
        </div>
      </body>
    </html>
  );
}

================
File: app/nature-overlay.jpg:Zone.Identifier
================
[ZoneTransfer]
ZoneId=3
HostUrl=https://www.wallpaperflare.com/

================
File: app/page.tsx
================
import HeroSection from './components/HeroSection';
import TravelPlannerForm from './components/TravelPlannerForm';

export default function Home() {
  return (
    <div className="container mx-auto px-4">
      <HeroSection />
      <TravelPlannerForm />
    </div>
  );
}

================
File: app/travel-background.jpg:Zone.Identifier
================
[ZoneTransfer]
ZoneId=3
ReferrerUrl=https://www.google.com/
HostUrl=https://assets.bucketlistly.blog/sites/5adf778b6eabcc00190b75b1/content_entry5b155bed5711a8176e9f9783/5c4fbe2246025317508def41/files/nepal-everest-base-camp-everest-travel-photo-20190128094442660-main-image.jpg

================
File: app/traveler.png:Zone.Identifier
================
[ZoneTransfer]
ZoneId=3
ReferrerUrl=https://www.google.com/
HostUrl=https://w7.pngwing.com/pngs/1021/1008/png-transparent-taman-negara-travel-hotel-package-tour-tourism-travel-photography-girl-business.png
